// Code generated by protoc-gen-go. DO NOT EDIT.
// source: timereport.proto

package timereport

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ReportRequest_TimeFormat int32

const (
	ReportRequest_RFC3339 ReportRequest_TimeFormat = 0
	ReportRequest_RFC822  ReportRequest_TimeFormat = 1
	ReportRequest_KITCHEN ReportRequest_TimeFormat = 2
)

var ReportRequest_TimeFormat_name = map[int32]string{
	0: "RFC3339",
	1: "RFC822",
	2: "KITCHEN",
}

var ReportRequest_TimeFormat_value = map[string]int32{
	"RFC3339": 0,
	"RFC822":  1,
	"KITCHEN": 2,
}

func (x ReportRequest_TimeFormat) String() string {
	return proto.EnumName(ReportRequest_TimeFormat_name, int32(x))
}

func (ReportRequest_TimeFormat) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c989dee78a46dcf7, []int{0, 0}
}

type ReportRequest struct {
	Interval             *duration.Duration       `protobuf:"bytes,1,opt,name=interval,proto3" json:"interval,omitempty"`
	Format               ReportRequest_TimeFormat `protobuf:"varint,2,opt,name=format,proto3,enum=timereport.ReportRequest_TimeFormat" json:"format,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *ReportRequest) Reset()         { *m = ReportRequest{} }
func (m *ReportRequest) String() string { return proto.CompactTextString(m) }
func (*ReportRequest) ProtoMessage()    {}
func (*ReportRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c989dee78a46dcf7, []int{0}
}

func (m *ReportRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReportRequest.Unmarshal(m, b)
}
func (m *ReportRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReportRequest.Marshal(b, m, deterministic)
}
func (m *ReportRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReportRequest.Merge(m, src)
}
func (m *ReportRequest) XXX_Size() int {
	return xxx_messageInfo_ReportRequest.Size(m)
}
func (m *ReportRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReportRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReportRequest proto.InternalMessageInfo

func (m *ReportRequest) GetInterval() *duration.Duration {
	if m != nil {
		return m.Interval
	}
	return nil
}

func (m *ReportRequest) GetFormat() ReportRequest_TimeFormat {
	if m != nil {
		return m.Format
	}
	return ReportRequest_RFC3339
}

type ReportResponse struct {
	Message              string               `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Timestamp            *timestamp.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ReportResponse) Reset()         { *m = ReportResponse{} }
func (m *ReportResponse) String() string { return proto.CompactTextString(m) }
func (*ReportResponse) ProtoMessage()    {}
func (*ReportResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c989dee78a46dcf7, []int{1}
}

func (m *ReportResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReportResponse.Unmarshal(m, b)
}
func (m *ReportResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReportResponse.Marshal(b, m, deterministic)
}
func (m *ReportResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReportResponse.Merge(m, src)
}
func (m *ReportResponse) XXX_Size() int {
	return xxx_messageInfo_ReportResponse.Size(m)
}
func (m *ReportResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReportResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReportResponse proto.InternalMessageInfo

func (m *ReportResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ReportResponse) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func init() {
	proto.RegisterEnum("timereport.ReportRequest_TimeFormat", ReportRequest_TimeFormat_name, ReportRequest_TimeFormat_value)
	proto.RegisterType((*ReportRequest)(nil), "timereport.ReportRequest")
	proto.RegisterType((*ReportResponse)(nil), "timereport.ReportResponse")
}

func init() { proto.RegisterFile("timereport.proto", fileDescriptor_c989dee78a46dcf7) }

var fileDescriptor_c989dee78a46dcf7 = []byte{
	// 285 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x8f, 0xcd, 0x4a, 0xf3, 0x40,
	0x14, 0x86, 0xbf, 0xe9, 0x22, 0xfd, 0x7a, 0x82, 0x25, 0xcc, 0x2a, 0xcd, 0x42, 0x4b, 0x70, 0xd1,
	0xd5, 0x54, 0x26, 0x08, 0x15, 0xdc, 0x48, 0x34, 0x28, 0x82, 0xc8, 0x98, 0x1b, 0x48, 0xed, 0x69,
	0x08, 0x34, 0x99, 0x38, 0x33, 0xe9, 0xb5, 0x79, 0x79, 0x92, 0x49, 0xd3, 0xf8, 0xbb, 0x9c, 0xf3,
	0x3e, 0xf3, 0xfe, 0x80, 0x67, 0x8a, 0x12, 0x15, 0xd6, 0x52, 0x19, 0x56, 0x2b, 0x69, 0x24, 0x85,
	0xe1, 0x12, 0x9c, 0xe6, 0x52, 0xe6, 0x3b, 0x5c, 0x5a, 0x65, 0xdd, 0x6c, 0x97, 0x9b, 0x46, 0x65,
	0xa6, 0x90, 0x55, 0xc7, 0x06, 0x67, 0xdf, 0xf5, 0xf6, 0xaf, 0x36, 0x59, 0x59, 0x77, 0x40, 0xf8,
	0x4e, 0xe0, 0x44, 0x58, 0x2f, 0x81, 0x6f, 0x0d, 0x6a, 0x43, 0x2f, 0xe1, 0x7f, 0x51, 0x19, 0x54,
	0xfb, 0x6c, 0xe7, 0x93, 0x39, 0x59, 0xb8, 0x7c, 0xc6, 0x3a, 0x17, 0xd6, 0xbb, 0xb0, 0xdb, 0x43,
	0x8a, 0x38, 0xa2, 0xf4, 0x1a, 0x9c, 0xad, 0x54, 0x65, 0x66, 0xfc, 0xd1, 0x9c, 0x2c, 0xa6, 0xfc,
	0x9c, 0x7d, 0x2a, 0xfe, 0x25, 0x81, 0xa5, 0x45, 0x89, 0x89, 0x65, 0xc5, 0xe1, 0x4f, 0xc8, 0x01,
	0x86, 0x2b, 0x75, 0x61, 0x2c, 0x92, 0x38, 0x8a, 0xa2, 0x2b, 0xef, 0x1f, 0x05, 0x70, 0x44, 0x12,
	0xaf, 0x38, 0xf7, 0x48, 0x2b, 0x3c, 0x3e, 0xa4, 0xf1, 0xfd, 0xdd, 0x93, 0x37, 0x0a, 0x37, 0x30,
	0xed, 0x7d, 0x75, 0x2d, 0x2b, 0x8d, 0xd4, 0x87, 0x71, 0x89, 0x5a, 0x67, 0x39, 0xda, 0xe6, 0x13,
	0xd1, 0x3f, 0xe9, 0x0a, 0x26, 0xc7, 0xe5, 0xb6, 0xa0, 0xcb, 0x83, 0x1f, 0xab, 0xd2, 0x9e, 0x10,
	0x03, 0xcc, 0x9f, 0xc1, 0x6d, 0xef, 0x2f, 0xa8, 0xf6, 0xc5, 0x2b, 0xd2, 0x1b, 0x70, 0xba, 0x50,
	0x3a, 0xfb, 0x73, 0x60, 0x10, 0xfc, 0x26, 0x75, 0x1d, 0x2f, 0xc8, 0xda, 0xb1, 0x81, 0xd1, 0x47,
	0x00, 0x00, 0x00, 0xff, 0xff, 0xc6, 0x89, 0x96, 0x38, 0xda, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TimeServiceClient is the client API for TimeService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TimeServiceClient interface {
	// Stream the time report.
	Report(ctx context.Context, in *ReportRequest, opts ...grpc.CallOption) (TimeService_ReportClient, error)
}

type timeServiceClient struct {
	cc *grpc.ClientConn
}

func NewTimeServiceClient(cc *grpc.ClientConn) TimeServiceClient {
	return &timeServiceClient{cc}
}

func (c *timeServiceClient) Report(ctx context.Context, in *ReportRequest, opts ...grpc.CallOption) (TimeService_ReportClient, error) {
	stream, err := c.cc.NewStream(ctx, &_TimeService_serviceDesc.Streams[0], "/timereport.TimeService/Report", opts...)
	if err != nil {
		return nil, err
	}
	x := &timeServiceReportClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type TimeService_ReportClient interface {
	Recv() (*ReportResponse, error)
	grpc.ClientStream
}

type timeServiceReportClient struct {
	grpc.ClientStream
}

func (x *timeServiceReportClient) Recv() (*ReportResponse, error) {
	m := new(ReportResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// TimeServiceServer is the server API for TimeService service.
type TimeServiceServer interface {
	// Stream the time report.
	Report(*ReportRequest, TimeService_ReportServer) error
}

// UnimplementedTimeServiceServer can be embedded to have forward compatible implementations.
type UnimplementedTimeServiceServer struct {
}

func (*UnimplementedTimeServiceServer) Report(req *ReportRequest, srv TimeService_ReportServer) error {
	return status.Errorf(codes.Unimplemented, "method Report not implemented")
}

func RegisterTimeServiceServer(s *grpc.Server, srv TimeServiceServer) {
	s.RegisterService(&_TimeService_serviceDesc, srv)
}

func _TimeService_Report_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ReportRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(TimeServiceServer).Report(m, &timeServiceReportServer{stream})
}

type TimeService_ReportServer interface {
	Send(*ReportResponse) error
	grpc.ServerStream
}

type timeServiceReportServer struct {
	grpc.ServerStream
}

func (x *timeServiceReportServer) Send(m *ReportResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _TimeService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "timereport.TimeService",
	HandlerType: (*TimeServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Report",
			Handler:       _TimeService_Report_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "timereport.proto",
}
